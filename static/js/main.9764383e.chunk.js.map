{"version":3,"sources":["redux/actionTypes.js","redux/actions.js","redux/selectors.js","components/TodoList/TodoList.js","components/Filter/Filter.js","components/TodoInputForm/TodoInputForm.js","components/App/App.js","redux/reducers/todos.js","reportWebVitals.js","redux/reducers/filterTodos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ADD_TODO","DELETE_TODO","TOGGLE_TODO","UPDATE_TODO","SET_FILTER","CLEAR_ALL","updateTodo","id","name","type","payload","setFilter","filter","selectFilterTodos","store","todoList","todosReducers","todos","filterTodosReducers","todo","isCompleted","selectCurrentFilter","selectTodos","Todo","styled","div","TodoContentEditWrapper","form","TodoContentEdit","input","TodoContent","props","Button","button","EditButton","DeleteButton","ToggleStatusButton","TodoList","dispatch","useDispatch","filterTodos","useSelector","useState","isEdit","editStatus","setEditStatus","newTodo","setNewTodo","useEffect","window","localStorage","setItem","JSON","stringify","map","onSubmit","e","preventDefault","placeholder","value","onChange","target","autoFocus","onClick","FilterWrapper","FilterButton","$active","FilterAllButton","FilterCompletedButton","FilterIncompleteButton","ClearAllButton","Filter","currentFilter","TodoInputWrapper","TodoInput","TodoInputForm","setTodo","TodoWrapper","TodoTitle","App","todoId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getItem","length","parse","initState","initialState","combineReducers","state","action","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9764383e.chunk.js","sourcesContent":["export const ADD_TODO = \"add_todo\";\r\nexport const DELETE_TODO = \"delete_todo\";\r\nexport const TOGGLE_TODO = \"toggle_todo\";\r\nexport const UPDATE_TODO = \"update_todo\";\r\nexport const SET_FILTER = \"set_filter\";\r\nexport const CLEAR_ALL = \"clear_all\";\r\n","import {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  TOGGLE_TODO,\r\n  UPDATE_TODO,\r\n  SET_FILTER,\r\n  CLEAR_ALL,\r\n} from \"./actionTypes\";\r\n\r\n// action creators\r\n\r\nexport function addTodo(name) {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload: {\r\n      name,\r\n    },\r\n  };\r\n}\r\n\r\nexport function deleteTodo(id) {\r\n  return {\r\n    type: DELETE_TODO,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n}\r\n\r\nexport function toggleTodo(id) {\r\n  return {\r\n    type: TOGGLE_TODO,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n}\r\n\r\nexport function updateTodo(id, name) {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload: {\r\n      id,\r\n      name,\r\n    },\r\n  };\r\n}\r\n\r\nexport function setFilter(filter) {\r\n  return {\r\n    type: SET_FILTER,\r\n    payload: {\r\n      filter,\r\n    },\r\n  };\r\n}\r\n\r\nexport function clearAll() {\r\n  return {\r\n    type: CLEAR_ALL,\r\n  };\r\n}\r\n","export const selectFilterTodos = (store) => {\r\n  let todoList = store.todosReducers.todos;\r\n  switch (store.filterTodosReducers) {\r\n    case \"all\": {\r\n      return todoList;\r\n    }\r\n    case \"completed\": {\r\n      return todoList.filter((todo) => todo.isCompleted);\r\n    }\r\n    case \"incomplete\": {\r\n      return todoList.filter((todo) => !todo.isCompleted);\r\n    }\r\n    default:\r\n      return todoList;\r\n  }\r\n};\r\n\r\nexport const selectCurrentFilter = (store) => {\r\n  return store.filterTodosReducers;\r\n};\r\n\r\nexport const selectTodos = (store) => {\r\n  return store.todosReducers.todos;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { deleteTodo, toggleTodo, updateTodo } from \"../../redux/actions\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectFilterTodos, selectTodos } from \"../../redux/selectors\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Todo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #dc9fb4;\r\n`;\r\n\r\nconst TodoContentEditWrapper = styled.form`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nconst TodoContentEdit = styled.input`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  border: 1px solid #b5495b;\r\n  border-radius: 3px;\r\n  color: #9f353a;\r\n\r\n  &::placeholder {\r\n    color: #dc9fb4;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0px 0px 1px 1px #b5495b;\r\n  }\r\n`;\r\n\r\nconst TodoContent = styled.div`\r\n  width: 100%;\r\n  word-break: break-all;\r\n  color: #9f353a;\r\n  font-size: 18px;\r\n\r\n  ${(props) =>\r\n    props.isCompleted &&\r\n    `\r\n    text-decoration: line-through;\r\n  `}\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 5px;\r\n  padding: 0px;\r\n  min-width: 80px;\r\n  height: 20px;\r\n  border: none;\r\n  border-radius: 3px;\r\n  color: #fedfe1;\r\n  background: #b5495b;\r\n  cursor: pointer;\r\n  outline: none;\r\n`;\r\n\r\nconst EditButton = styled(Button)``;\r\nconst DeleteButton = styled(Button)``;\r\nconst ToggleStatusButton = styled(Button)``;\r\n\r\nexport default function TodoList() {\r\n  const dispatch = useDispatch();\r\n  const filterTodos = useSelector(selectFilterTodos);\r\n  const todos = useSelector(selectTodos);\r\n  const [editStatus, setEditStatus] = useState({ isEdit: false, id: \"\" });\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n\r\n  // 原本是依據 filterTodos，但發現每按一次篩選都會被改\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  return (\r\n    <div>\r\n      {filterTodos.map((todo) => (\r\n        <Todo key={todo.id}>\r\n          {editStatus.isEdit && editStatus.id === todo.id ? (\r\n            <TodoContentEditWrapper\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                if (newTodo === \"\") {\r\n                  // 沒變更\r\n                  dispatch(updateTodo(todo.id, todo.name));\r\n                } else {\r\n                  dispatch(updateTodo(todo.id, newTodo));\r\n                }\r\n                setNewTodo(\"\");\r\n                setEditStatus({ isEdit: false, id: \"\" });\r\n              }}\r\n            >\r\n              <TodoContentEdit\r\n                placeholder={todo.name}\r\n                value={newTodo}\r\n                onChange={(e) => setNewTodo(e.target.value)}\r\n                autoFocus\r\n              />\r\n            </TodoContentEditWrapper>\r\n          ) : (\r\n            <TodoContent isCompleted={todo.isCompleted}>\r\n              {todo.name}\r\n            </TodoContent>\r\n          )}\r\n          {!todo.isCompleted && (\r\n            <EditButton\r\n              onClick={() => {\r\n                setEditStatus({ isEdit: true, id: todo.id });\r\n              }}\r\n            >\r\n              edit\r\n            </EditButton>\r\n          )}\r\n          <DeleteButton onClick={() => dispatch(deleteTodo(todo.id))}>\r\n            delete\r\n          </DeleteButton>\r\n          <ToggleStatusButton onClick={() => dispatch(toggleTodo(todo.id))}>\r\n            {todo.isCompleted && \"incomplete\"}\r\n            {!todo.isCompleted && \"completed\"}\r\n          </ToggleStatusButton>\r\n        </Todo>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectCurrentFilter } from \"../../redux/selectors\";\r\nimport { setFilter, clearAll } from \"../../redux/actions\";\r\n\r\nconst FilterWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 16px;\r\n`;\r\nconst FilterButton = styled.button`\r\n  padding: 5px 0;\r\n  width: 120px;\r\n  border-radius: 3px;\r\n  border: none;\r\n  color: #d05a6e;\r\n  border: 1px solid #fedfe1;\r\n  background: transparent;\r\n  transition: all 1s ease-out;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  & + & {\r\n    margin-left: 5px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.$active &&\r\n    `\r\n    background: #fedfe1;\r\n  `}\r\n`;\r\nconst FilterAllButton = styled(FilterButton)``;\r\nconst FilterCompletedButton = styled(FilterButton)``;\r\nconst FilterIncompleteButton = styled(FilterButton)``;\r\nconst ClearAllButton = styled(FilterButton)`\r\n  background: #86473f;\r\n  color: #fcfaf2;\r\n  border: none;\r\n`;\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const currentFilter = useSelector(selectCurrentFilter);\r\n\r\n  return (\r\n    <FilterWrapper>\r\n      <FilterAllButton\r\n        $active={currentFilter === \"all\"}\r\n        onClick={() => dispatch(setFilter(\"all\"))}\r\n      >\r\n        all\r\n      </FilterAllButton>\r\n      <FilterCompletedButton\r\n        $active={currentFilter === \"completed\"}\r\n        onClick={() => dispatch(setFilter(\"completed\"))}\r\n      >\r\n        completed\r\n      </FilterCompletedButton>\r\n      <FilterIncompleteButton\r\n        $active={currentFilter === \"incomplete\"}\r\n        onClick={() => dispatch(setFilter(\"incomplete\"))}\r\n      >\r\n        incomplete\r\n      </FilterIncompleteButton>\r\n      <ClearAllButton onClick={() => dispatch(clearAll())}>\r\n        clear all\r\n      </ClearAllButton>\r\n    </FilterWrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../../redux/actions\";\r\n\r\nconst TodoInputWrapper = styled.form``;\r\nconst TodoInput = styled.input`\r\n  box-sizing: border-box;\r\n  padding: 2px;\r\n  width: 100%;\r\n  font-size: 16px;\r\n  color: #b5495b;\r\n  border: 1px solid #b5495b;\r\n  border-radius: 3px;\r\n\r\n  &::placeholder {\r\n    color: #dc9fb4;\r\n    font-style: italic;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0px 0px 1px 1px #b5495b;\r\n  }\r\n`;\r\n\r\nexport default function TodoInputForm() {\r\n  const dispatch = useDispatch();\r\n  const [todo, setTodo] = useState(\"\");\r\n\r\n  return (\r\n    <TodoInputWrapper\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        dispatch(addTodo(todo));\r\n        setTodo(\"\");\r\n      }}\r\n    >\r\n      <TodoInput\r\n        onChange={(e) => setTodo(e.target.value)}\r\n        value={todo}\r\n        placeholder=\"todo...\"\r\n      />\r\n    </TodoInputWrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\nimport TodoList from \"../TodoList\";\nimport Filter from \"../Filter\";\nimport TodoInputForm from \"../TodoInputForm\";\n\nconst TodoWrapper = styled.div`\n  box-sizing: border-box;\n  margin: 50px auto;\n  padding: 20px;\n  max-width: 520px;\n  border: 2px solid #b5495b;\n  border-radius: 5px;\n`;\n\nconst TodoTitle = styled.div`\n  margin-bottom: 16px;\n  text-align: center;\n  color: #b5495b;\n  font-size: 26px;\n  font-style: italic;\n`;\n\nfunction App() {\n  return (\n    <TodoWrapper>\n      <TodoTitle>todo</TodoTitle>\n      <TodoInputForm />\n      <TodoList />\n      <Filter />\n    </TodoWrapper>\n  );\n}\n\nexport default App;\n","import {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  TOGGLE_TODO,\r\n  UPDATE_TODO,\r\n  CLEAR_ALL,\r\n} from \"../actionTypes\";\r\n\r\nlet todoId;\r\n\r\nif (!window.localStorage.getItem(\"todos\")) {\r\n  todoId = 0;\r\n} else {\r\n  const length = JSON.parse(window.localStorage.getItem(\"todos\")).length;\r\n  todoId = length;\r\n}\r\n\r\n// 看 localStorage 裡面有沒有東西去設定 initialState\r\n// 參考：[Redux store changes when reload page](https://stackoverflow.com/questions/48410332/redux-store-changes-when-reload-page)\r\n\r\nfunction initState() {\r\n  if (!window.localStorage.getItem(\"todos\")) return { todos: [] };\r\n  return {\r\n    todos: JSON.parse(window.localStorage.getItem(\"todos\")),\r\n  };\r\n}\r\n\r\nexport default function todosReducers(state = initState(), action) {\r\n  switch (action.type) {\r\n    case ADD_TODO: {\r\n      return {\r\n        todos: [\r\n          ...state.todos,\r\n          {\r\n            name: action.payload.name,\r\n            id: todoId++,\r\n            isCompleted: false,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n    case DELETE_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id),\r\n      };\r\n    }\r\n    case TOGGLE_TODO: {\r\n      const { id } = action.payload;\r\n      return {\r\n        ...state.todos,\r\n        todos: state.todos.map((todo) => {\r\n          if (todo.id !== id) return todo;\r\n          return {\r\n            ...todo,\r\n            isCompleted: !todo.isCompleted,\r\n          };\r\n        }),\r\n      };\r\n    }\r\n    case UPDATE_TODO: {\r\n      const { id, name } = action.payload;\r\n      return {\r\n        ...state.todos,\r\n        todos: state.todos.map((todo) => {\r\n          if (todo.id !== id) return todo;\r\n          return {\r\n            ...todo,\r\n            id,\r\n            name,\r\n          };\r\n        }),\r\n      };\r\n    }\r\n    case CLEAR_ALL: {\r\n      return {\r\n        todos: [],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_FILTER } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  filter: \"\",\r\n};\r\n\r\nexport default function filterTodosReducers(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FILTER: {\r\n      return action.payload.filter;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport todosReducers from \"./todos\";\r\nimport filterTodosReducers from \"./filterTodos\";\r\n\r\nexport default combineReducers({ todosReducers, filterTodosReducers });\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}